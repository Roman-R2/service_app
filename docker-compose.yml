version: "3.7"

services:
  web-app:
    build:
      context: ./
    #    container_name: web-app
    #    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./service:/web-app/service
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database

  database:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres-volume:/var/lib/postgresql/data/

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: ./
    # По какому hostname внутри docker будет определяться сервис
    hostname: worker
    entrypoint: celery
    # Файл celery_app в котором есть переменная app
    # Пытаемся создать worker
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./service:/web-app/service
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

  flower:
    build:
      context: ./
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/web-app/service
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"

volumes:
  postgres-volume: